---
title: "E(tive)Lice verification data simulation"
author: "Tim Szewczyk"
format: pdf
editor: visual
toc: true
number-sections: true
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

# Overview

This document generates data for verification of the integrated ensemble model (IEM). The IEM is a multilevel Bayesian model that combines copepodid infection pressure (IP) from a set of particle tracking simulation variants, calculates ensemble IP as a weighted average across the simulation variants, estimates attachment rates, and models the on-fish progression of daily lice cohorts through time. Observed counts of each stage of lice each week are used as the response variable, with all model parameters estimated jointly. The IEM will be verified using data that is simulated using identical processes with known, realistic parameters to assess the ability of the IEM to accurately and precisely recover parameters.

This script can be modified to use final `biotracker` simulations, best available farm data and the final parameter sets. For the moment, it uses daily averages from `etive28` at each farm with a sample of six `biotracker` simulations, running from 2023-01-01 to 2023-12-31.

Parameters are based on previous literature, e.g., [@kragesteen2023; @kragesteen2021; @kragesteen2019; @kragesteen2018; @samsing2015; @samsing2016], or quick trial-and-error tuning to get plausible values.

The final output is stored in a directory created within `./data/sim` along with all necessary parameter settings and metadata.

# Setup

```{r}
#| message: false
#| warning: false
#| results: false

library(tidyverse)
library(sf)
library(glue)
library(here)
proj_dir <- here()
theme_set(theme_bw())
dir(glue("{proj_dir}/code/fn"), ".R", full.names=T) |> walk(source)

# mesh footprints
mesh_dir <- glue("{proj_dir}/../03_packages/WeStCOMS/data")
wc_fp <- st_read(glue("{mesh_dir}/WeStCOMS2_meshFootprint.gpkg"))
etive_fp <- st_read(glue("{mesh_dir}/etive28_mesh_footprint.gpkg"))
```

```{r}
# generate simulation number
sim_num <- str_pad(length(dir(glue("{proj_dir}/data/sim"), "sim"))+1, 2, 'left', '0')
out_dir <- glue("{proj_dir}/data/sim/sim_{sim_num}")
inputs_dir <- glue("{proj_dir}/data/sim/inputs")
```

```{r}
seed <- sample(100, 1)
set.seed(seed)
```

```{r}
#| echo: false
cat("Sim", sim_num, "running with seed:", seed)
```

## Farm data

`farm_i`: Farm metadata. Location, depth (`etive28`), surface area within 100m radius (excluding land, based on `etive28` mesh), and volume = area \* depth.

```{r}
etive_farms <- c("FFMC84", "FFMC32", "APT1", "SAR1", "FFMC27")
farm_i <- read_csv(glue("{inputs_dir}/farm_i.csv"), show_col_types=F) |>
  mutate(sepaSite=factor(sepaSite, levels=etive_farms)) |>
  arrange(sepaSite) |>
  mutate(firstDay=sample(1:5, n(), replace=T))
farm_i
```

```{r}
#| fig-width: 10
#| fig-height: 5
#| fig-cap: "Sites in and near Loch Etive."
#| fig-dpi: 400
#| echo: false
farm_sf <- st_as_sf(farm_i, coords=c("easting", "northing"), crs=27700) |> 
  st_buffer(dist=100)
ggplot() +
  geom_sf(data=wc_fp, fill="grey90", colour="grey50") +
  geom_sf(data=etive_fp, fill="dodgerblue", colour="grey50", alpha=0.25) + 
  geom_sf(data=farm_sf, colour=NA, fill="red") +
  geom_sf_text(data=farm_sf, aes(label=sepaSite), hjust=0, nudge_x=100, size=3) +
  scale_x_continuous(limits=c(184000, 211000), oob=scales::oob_keep) + 
  scale_y_continuous(limits=c(732000, 745000), oob=scales::oob_keep) +
  theme(axis.title=element_blank())
```

`farm_dat`: Daily interpolation of mean adult female lice per fish, reported fish biomass, estimated number of fish assuming 240 fish per tonne, estimated total adult female lice assuming 240 fish per tonne, area within 100m radius, receiving area ratio, logit-transformed receiving area ratio, and whether lice were sampled on a given day. Receiving area ratio is calculated following @kragesteen2023 as $R(W_i) = \sqrt{\frac{W_i}{DV_r}}$ (recommended Method 3), with biomass $W$ = `actualBiomassOnSiteTonnes * 1000` ($kg$), stocking density $D = 20 kg \cdot m^{-3}$, and receiving area $V_r$ = `vol` ($m^3$). I assume here a depth of 20m for the receiving area. Thus, $R(W_i)$ = `RW` is the proportion of copepodids that successfully attach.

```{r}
farm_dat <- read_csv(glue("{inputs_dir}/farm_dat.csv"), show_col_types=F) |>
  right_join(farm_i |> select(sepaSite, area, firstDay), by=join_by(sepaSite)) |>
  mutate(sepaSite=factor(sepaSite, levels=etive_farms),
         nFish_est=actualBiomassOnSiteTonnes*240,
         total_AF=weeklyAverageAf * nFish_est,
         RW=sqrt(actualBiomassOnSiteTonnes*1000/(20*20*area)),
         RW_logit=brms::logit_scaled(RW, lb=-1e-5)) |>
  group_by(sepaSite) |>
  mutate(sampled=date %in% (first(date) + first(firstDay) + 7*(0:52))) |>
  ungroup() |>
  select(-firstDay) |>
  mutate(nFishSampled=sample(20:40, n(), replace=T))
glimpse(farm_dat)
```

```{r}
#| fig-width: 10
#| fig-height: 9
#| fig-cap: "Farm data based on reported values. Rug on x-axis shows dates where simulated lice will be sampled."
#| fig-dpi: 400
#| echo: false

farm_dat_gg <- ggplot(farm_dat, aes(x=date)) + 
  geom_rug(aes(colour=sampled), sides="b") +
  scale_colour_manual(values=c(NA, "black"), na.value=NA, guide="none") +
  scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
  facet_wrap(~sepaSite, nrow=1) +
  theme(axis.title.x=element_blank())
p_ls <- list(farm_dat_gg + geom_line(aes(y=nFish_est)),
             farm_dat_gg + geom_line(aes(y=weeklyAverageAf)),
             farm_dat_gg + geom_line(aes(y=total_AF)),
             farm_dat_gg + geom_line(aes(y=RW)))
cowplot::plot_grid(plotlist=p_ls, ncol=1, align="hv")
```

::: callout-caution
## TODO: Update to more realistic fish numbers

Estimation of fish numbers is **terrible**, but will serve for now .
:::

## Environmental data

From `etive28`, I've calculated daily averages across the top 20m at each farm location to summarise the environmental conditions.

```{r}
farm_env <- read_csv(glue("{inputs_dir}/farm_env.csv"), show_col_types=F) |>
  filter(sepaSite %in% etive_farms) |>
  mutate(sepaSite=factor(sepaSite, levels=etive_farms)) |>
  mutate(day=as.numeric(as.factor(date))) |>
  right_join(farm_dat |> 
               select(sepaSite, date, nFish_est, RW, RW_logit, sampled, nFishSampled), 
             by=join_by(sepaSite, date)) |>
  arrange(sepaSite, day) |>
  mutate(u=u*100, # cm/s
         v=v*100, # cm/s
         w=w*100, # cm/s
         uv=uv*100, 
         uv_sq=uv^2) |>
  mutate(across(c(temperature, u, v, w, uv, salinity), ~c(scale(.x)), .names="{.col}_z"))
glimpse(farm_env)
# for back-transforming z-scores
farm_env_avg <- farm_env |>
  reframe(across(where(is.numeric), ~c(mn=mean(.x), sd=sd(.x)))) |>
  select(-ends_with("_z")) |>
  mutate(metric=c("mean", "sd"))
farm_env_avg
```

```{r}
#| fig-width: 10
#| fig-height: 8
#| fig-cap: "WeStCOMS2 at farm locations. Farms are ordered from uploch (light) to downloch (dark)."
#| fig-dpi: 400
#| echo: false
farm_env |>
  select(-ends_with("_z")) |>
  pivot_longer(cols=c("u", "v", "w", "uv", "salinity", "temperature"),
               names_to="variable", values_to="value") |>
  mutate(variable=factor(variable,
                         levels=c("salinity", "temperature", "u", "v", "w", "uv"))) |>
  ggplot(aes(date, value, colour=sepaSite)) +
  geom_line() +
  scico::scale_colour_scico_d("Farm", palette="devon", end=0.8, direction=-1) +
  facet_grid(variable~., scales="free_y") +
  scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
  labs(y="Daily mean, 0-30m (WeStCOMS2)") +
  guides(colour=guide_legend(override.aes=list(linewidth=1))) + 
  theme(panel.grid.major.y=element_line(colour="grey85", linewidth=0.2),
        panel.grid.minor.y=element_line(colour="grey95", linewidth=0.1),
        axis.title.x=element_blank())
```

## Infection pressure

Copepodid infection pressure was taken from 6 `biotracker` simulations which randomly sampled from a plausible parameter space. The number of copepodids in the top 20m within a 100m radius of each farm was totaled each day. The parameters that varied were:

```{r}
#| message: false
#| echo: false
read_csv("D:/EtiveLice/out/biotracker/sim_i.csv") |>
  select(-i, -outDir, -ends_with("_b")) |>
  mutate(across(where(is.numeric), ~signif(.x, 3))) |>
  glimpse()
```

```{r}
influx_df <- read_csv(glue("{inputs_dir}/influx.csv"), show_col_types=F) |>
  mutate(sepaSite=factor(sepaSite, levels=etive_farms)) |>
  full_join(tibble(date=seq(ymd("2023-01-01"), ymd("2023-12-31"), by=1),
                   sepaSite=etive_farms[1], sim="01"),
            by=join_by(sepaSite, sim, date)) |>
  complete(date, sepaSite, sim, fill=list(influx=0, influx_m2=0)) |>
  mutate(day=as.numeric(as.factor(date))) |>
  select(date, day, sepaSite, sim, influx, influx_m2) |>
  arrange(sim, sepaSite, day) |>
  full_join(farm_dat |> select(sepaSite, area) |> slice_head(n=1, by=sepaSite),
            by=join_by(sepaSite)) |>
  mutate(influx_100m=influx_m2*area,
         influx_m3=influx_m2/20)
glimpse(influx_df)
```

```{r}
#| fig-width: 10
#| fig-height: 12
#| fig-cap: "Daily copepodid infection pressure by farm."
#| fig-dpi: 400
#| echo: false
p_ls <- list(
  ggplot(influx_df, aes(date, influx_m3, colour=sim)) +
    geom_line() +
    scale_colour_viridis_d("Sim", option="turbo") +
    scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
    scale_y_continuous("Mean daily copepodids / m3 in top 20m") +
    facet_grid(sepaSite~.) +
    theme(axis.title.x=element_blank()),
  ggplot(influx_df, aes(date, influx_m3^0.25, colour=sim)) +
    geom_line() +
    scale_colour_viridis_d("Sim", option="turbo") +
    scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
    scale_y_continuous("(Mean daily copepodids / m3)^0.25") +
    facet_grid(sepaSite~.) +
    theme(axis.title.x=element_blank()))
cowplot::plot_grid(plotlist=p_ls, ncol=1, align="hv")
```

```{r}
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Daily copepodid infection pressure by simulation. Farms are ordered from uploch (light) to downloch (dark)."
#| fig-dpi: 400
#| echo: false
p_ls <- list(
  ggplot(influx_df, aes(date, influx_m3, colour=sepaSite)) +
    geom_line() +
    scico::scale_colour_scico_d("Farm", palette="devon", end=0.8, direction=-1) +
    scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
    scale_y_continuous("Daily copepodids / m3") +
    guides(colour=guide_legend(override.aes=list(linewidth=1))) + 
    facet_grid(sim~.) +
    theme(axis.title.x=element_blank()),
  ggplot(influx_df, aes(date, influx_m3^0.25, colour=sepaSite)) +
    geom_line() +
    scico::scale_colour_scico_d("Farm", palette="devon", end=0.8, direction=-1) +
    scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
    scale_y_continuous("(Daily copepodids / m3)^0.25") +
    guides(colour=guide_legend(override.aes=list(linewidth=1))) + 
    facet_grid(sim~.) +
    theme(axis.title.x=element_blank()))
cowplot::plot_grid(plotlist=p_ls, ncol=1, align="hv")
```

The simulations vary quite a lot in the infection pressure, with `sim_04` showing highest densities. FFMC27, just outside Loch Etive, has the lowest IP. This simulation has fast swim speeds (0.2 cm/s upward, 0.8 cm/s downward).

## Population settings

```{r}
#| eval: false
#| echo: false
# Generate realistic variability in parameters using Bayesian regression
library(brms)

# Pr(attach)
attach_mn <- c(-3, .8, 0.2, 0.4, -0.01)
attach_sigma <- 0.7
attach_df <- expand_grid(
  salinity_z=seq_range(farm_env$salinity_z, length.out=100),
  uv=seq_range(farm_env$uv, length.out=100),
  RW=seq_range(farm_env$RW, length.out=100)
) |>
  filter(RW > 0) |>
  slice_sample(n=50) |>
  mutate(RW_logit=brms::logit_scaled(RW, lb=-1e-5),
         salinity=salinity_z*farm_env_avg$salinity[2] + farm_env_avg$salinity[1]) |>
  mutate(eta=attach_mn[1] + 
           attach_mn[2] * RW_logit + 
           attach_mn[3] * salinity_z +
           attach_mn[4] * uv +
           attach_mn[5] * uv^2,
         obs=eta + rnorm(n(), 0, attach_sigma))
attach_out <- brm(obs ~ RW_logit + salinity_z + uv + I(uv^2),
                  data=attach_df, cores=4)
as_draws_df(attach_out) |>
  select(starts_with("b_")) |>
  write_csv("data/sim/inputs/posterior_prAttach.csv")

# Pr(surv) 
surv_mn=cbind(c(-2.5, -1, -1, -1.5),
              c(0.2, 0.18, 0.18, 0.16))
surv_sigma <- 0.7
surv_df <- expand_grid(
  salinity=seq_range(farm_env$salinity, length.out=100),
  stage=factor(1:4)
) |>
  slice_sample(n=10, by=stage) |> 
  ungroup() |>
  mutate(eta=surv_mn[stage,1] + surv_mn[stage,2]*salinity,
         obs=eta + rnorm(n(), 0, surv_sigma),
         int1=as.numeric(stage==1),
         int2=as.numeric(stage==2),
         int3=as.numeric(stage==3),
         int4=as.numeric(stage==4),
         sal1=as.numeric(stage==1)*salinity,
         sal2=as.numeric(stage==2)*salinity,
         sal3=as.numeric(stage==3)*salinity,
         sal4=as.numeric(stage==4)*salinity)
surv_out <- brm(obs ~ 0 + int1 + int2 + int3 + int4 + sal1 + sal2 + sal3 + sal4,
                 data=surv_df, cores=4)
as_draws_df(surv_out) |>
  select(starts_with("b_")) |>
  write_csv("data/sim/inputs/posterior_prSurv.csv")
```

```{r}
#| message: false
info <- list(nDays=n_distinct(influx_df$date),
             nFarms=n_distinct(influx_df$sepaSite),
             nSims=n_distinct(influx_df$sim),
             nStages=4)
params <- list(
  # Ensemble proportional weight for each biotracker simulation
  ensWts_p=rlnorm(info$nSims, sdlog=0.75) |> make_compositional(),
  # Pr(copepodid attachment): intercept, RW_logit, salinity, uv, uv^2
  attach_beta=glue("{inputs_dir}/posterior_prAttach.csv") |>
    read_csv() |> sample_n(1) |> unlist(),
  # On-fish survival: chalimus, pre-adult, adult, gravid female
  #   logit(p) = f(salinity); intercept, slope by stage
  surv_beta=glue("{inputs_dir}/posterior_prSurv.csv") |>
    read_csv() |> sample_n(1) |> unlist() |> matrix(ncol=2),
  # Cumulative GDD post-attachment needed to transition to next stage
  stageGDD_F=c(runif(4, 
                     min=c(125, 325, 525, 1475),
                     max=c(175, 375, 575, 1525)), 
               Inf),
  stageGDD_M=c(runif(3,
                     min=c(105, 290, 1475),
                     max=c(155, 340, 1525)),
               Inf, Inf),
  # Pr(detect) by stage
  detect_p=c(runif(3, 
                   min=c(0, 0.25, 0.75),
                   max=c(0.5, 0.95, 1)),
             1),
  # Precision parameter for fish-level lice counts ~negbinom(mu, phi)
  # Distribution tends toward poisson as phi -> Inf
  nb_prec=runif(1, min=0.5, max=5),
  # Background infection rate from wild fish (copepodids/m3/d)
  IP_bg_m3=runif(1, min=0, max=0.2)
)
```

In this particular simulation, the settings are:

```{r}
#| echo: false
map(params, ~signif(.x, 3))
```

```{r}
#| echo: false
#| message: false
#| fig-width: 10
#| fig-height: 8
# attachment
p_prAttach <- expand_grid(
  salinity_z=seq_range(farm_env$salinity_z, length.out=100),
  uv=seq_range(farm_env$uv, length.out=100),
  RW=seq(0.05, max(farm_env$RW), length.out=4)
) |>
  mutate(uv_sq=uv^2,
         salinity=salinity_z*farm_env_avg$salinity[2] + farm_env_avg$salinity[1],
         RW_logit=brms::logit_scaled(RW, lb=-1e-5),
         RW_lab=paste("RW:", round(RW, 2))) |>
  mutate(pr_attach=plogis(params$attach_beta[1] + 
                            params$attach_beta[2] * RW_logit + 
                            params$attach_beta[3] * salinity_z +
                            params$attach_beta[4] * uv +
                            params$attach_beta[5] * uv_sq)) |>
  ggplot(aes(salinity, uv, fill=pr_attach)) + 
  geom_raster() + 
  scale_fill_viridis_c("P(attach)", option="turbo", 
                       limits=c(0, 0.75), breaks=seq(0, 1, by=0.25)) +
  facet_grid(.~RW_lab) +
  scale_x_continuous("Salinity (psu)", breaks=c(10, 20, 30)) +
  labs(y="Water speed (cm/s)") +
  theme(legend.position="right",
        legend.key.height=unit(0.6, "cm"),
        legend.key.width=unit(0.2, "cm"))
# ensemble weights
p_ensWts <- tibble(sim=unique(influx_df$sim), 
                   p=params$ensWts_p) |>
  ggplot() +
  geom_bar(aes(x=sim, y=p, fill=sim), stat="identity", colour="grey30") +
  annotate("text", x="01", y=0.9, parse=T, hjust=0, vjust=0,
           label=paste0("IP[bg]: ", round(params$IP_bg_m3, 2), "~cop~m^-3~d^-1")) +
  scale_fill_viridis_d("Sim", option="turbo", guide="none") +
  scale_y_continuous("Ensemble weight p", limits=c(0, 1),
                     breaks=round(seq(0, 1, by=1/info$nSims), 2)) +
  xlab("Biotracker simulation")
# survival
p_prSurv <- expand_grid(
  salinity=seq_range(farm_env$salinity, length.out=100),
  stage=1:4
) |>
  mutate(pr_surv=plogis(params$surv_beta[stage,1] +
                          params$surv_beta[stage,2]*salinity),
         stage=factor(stage, labels=c("chal", "pread", "adult", "gravid"))) |>
  ggplot(aes(salinity, pr_surv, colour=stage)) +
  geom_line() +
  scale_colour_brewer(type="div") +
  labs(x="Salinity (psu)", y="P(survival)") +
  ylim(0, 1) +
  theme(legend.title=element_blank(),
        legend.position="inside",
        legend.position.inside=c(0.8, 0.15),
        legend.key.height=unit(0.2, "cm"),
        legend.background=element_blank())
# development
p_GDD <- tibble(Sex=rep(c("F", "M"), each=5),
       Stage=rep(1:5, times=2),
       GDD=c(params$stageGDD_F, params$stageGDD_M)) |>
  filter(!is.infinite(GDD)) |>
  mutate(Stage=factor(Stage, labels=c("chal", "pread", "adult", "gravid"))) |>
  full_join(expand_grid(Sex=c("M", "F"), 
                        GDD=1:1600)) |>
  arrange(Sex, GDD) |>
  group_by(Sex) |>
  fill(Stage, .direction="up") |>
  filter(!is.na(Stage)) |>
  ggplot(aes(GDD, Stage, colour=Sex, group=Sex)) +
  geom_line() +
  labs(x="Growing degree days") +
  theme(axis.title.y=element_blank(),
        legend.title=element_blank(),
        legend.position="inside",
        legend.position.inside=c(0.8, 0.15),
        legend.key.height=unit(0.2, "cm"),
        legend.background=element_blank())
# detection
p_detect <- tibble(Stage=factor(1:4, labels=c("chal", "pread", "adult", "gravid")),
       pr_detect=params$detect_p) |>
  ggplot(aes(pr_detect, Stage)) + 
  geom_bar(stat="identity", fill="grey", colour="grey30") +
  scale_x_continuous("P(Detect)", limits=c(0, 1)) +
  theme(axis.title.y=element_blank())
# sampling
p_nb <- expand_grid(mu=c(0.01, 0.1, 0.5, 1, 5),
            y=0:10) |>
  mutate(p=dnbinom(y, mu=mu, size=params$nb_prec),
         mu_lab=paste("mu :", mu)) |>
  ggplot(aes(y, p)) + 
  geom_bar(stat="identity", colour="grey30", fill="cadetblue") +
  geom_text(data=tibble(y=8, p=0.9, mu_lab="mu : 0.01", 
                        label=paste0("phi: ", round(params$nb_prec, 2))),
            aes(label=label), parse=T) +
  scale_x_continuous("Observed lice count", breaks=seq(0, 10, by=2)) +
  scale_y_continuous("Probability") +
  facet_grid(.~mu_lab, labeller=label_parsed)
cowplot::plot_grid(p_prAttach,
                   cowplot::plot_grid(p_ensWts, p_prSurv, p_GDD, p_detect,
                                      nrow=1, axis="tb", align="v"),
                   p_nb, ncol=1, rel_heights=c(0.6, 0.5, 0.55))
```

# Simulation

The simulation function is wrapped into `simulate_farm_pops()` in `code/fn/simulation.R`. Note that these loops can be vectorized for performance if needed. For forward simulation everything runs very fast, but the Stan model will likely need to be vectorized.

```{r}
#| echo: false
#| eval: false
#| code-fold: true
#| file: fn/simulation.R
```

To run it:

```{r}
#| warnings: false
params$IP_bg <- params$IP_bg_m3*farm_i$area*20
out_df <- simulate_farm_pops(params, info, influx_df, farm_env, out_dir)
```

In addition to the dataframe returned (daily mean lice per fish: latent (`mu`) and observed(`y`)), all processed inputs, intermediate structures, and output is stored in `{r} out_dir`.

# Results

## Ensemble infection pressure

```{r}
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Ensemble daily copepodid infection pressure. Farms are ordered from uploch (light) to downloch (dark)."
#| fig-dpi: 400
#| echo: false
ens_IP <- readRDS(glue("{out_dir}/ensIP.rds"))
ensIP_df <- expand_grid(sepaSite=farm_i$sepaSite, 
                        date=unique(farm_env$date)) |>
  left_join(farm_i |> select(sepaSite, area), by=join_by(sepaSite)) |>
  mutate(ensIP=c(ens_IP),
         influx_m3=ensIP/area/20) 
p_ls <- list(
  ggplot(ensIP_df, aes(date, influx_m3, colour=sepaSite)) +
    geom_line() +
    scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
    scale_y_continuous("Ensemble daily copepodids / m3 / d") +
    scico::scale_colour_scico_d("Farm", palette="devon", end=0.8, direction=-1) +
    theme(axis.title.x=element_blank()),
  ggplot(ensIP_df, aes(date, influx_m3^0.25, colour=sepaSite)) +
    geom_line() +
    scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
    scale_y_continuous("(Daily copepodids / m3 / d)^0.25") +
    scico::scale_colour_scico_d("Farm", palette="devon", end=0.8, direction=-1) +
    theme(axis.title.x=element_blank()))
cowplot::plot_grid(plotlist=p_ls, ncol=1, align="hv")
```

## Attachment rates

```{r}
#| fig-width: 10
#| fig-height: 4
#| fig-cap: "Daily copepodid infection pressure by simulation. Farms are ordered from uploch (light) to downloch (dark)."
#| fig-dpi: 400
#| echo: false
pr_attach <- readRDS(glue("{out_dir}/pr_attach.rds"))
pr_attach_df <- expand_grid(sepaSite=farm_i$sepaSite, 
                            date=unique(farm_env$date)) |>
  left_join(farm_i |> select(sepaSite, area), by=join_by(sepaSite)) |>
  mutate(pr_attach=c(pr_attach)) 

ggplot(pr_attach_df, aes(date, pr_attach, colour=sepaSite)) +
  geom_line() +
  scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
  scale_y_continuous("Attachment probability (RW)", limits=c(0, 1)) +
  scico::scale_colour_scico_d("Farm", palette="devon", end=0.8, direction=-1) +
  theme(axis.title.x=element_blank())
```

## Lice per fish

We can look at both the latent mean lice per fish (`mu`) and the observed mean lice per fish (`y`). The latent mean is recorded each day, with observations taken once each week on the corresponding day (`farm_i$firstDay`) as the average of `farm_env$nFishSample[farm,day]` fish.

::: callout-note
-   Note that pens can be treated separately, but then the population model needs to account for movement between pens.
-   A 100m catchment radius is smaller than the footprint of the actual farm; currently, pens are excluded from the catchment radius. The catchment radius should either be expanded, or pens treated separately. Non-circular catchment areas are not currently supported in `biotracker`, but could be implemented by reading in shapefiles.
-   The connectivity tally in `biotracker` disallows double counting, so with overlapping footprints, the particle would be attributed to whichever footprint it is in first. This would bias counts among pens based on ordering in the data.
:::

```{r}
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Daily mean lice per fish, including latent (mu, lines) and observed (y, points)."
#| fig-dpi: 400
#| echo: false
mu_df <- out_df |>
  select(date, sepaSite, starts_with("mu_")) |>
  pivot_longer(c(starts_with("mu_"))) |>
  mutate(type=str_split_fixed(name, "_", 2)[,1],
         stage=str_split_fixed(name, "_", 2)[,2]) |>
  mutate(stage=factor(stage, levels=c("chal", "prea", "am", "af", "af_gr", "af_ng"))) 
y_df <- out_df |>
  filter(sampled) |>
  select(date, sepaSite, starts_with("y_")) |>
  pivot_longer(c(starts_with("y_"))) |>
  mutate(type=str_split_fixed(name, "_", 2)[,1],
         stage=str_split_fixed(name, "_", 2)[,2]) |>
  mutate(stage=factor(stage, levels=c("chal", "prea", "am", "af", "af_gr", "af_ng"))) 

ggplot(mu_df, aes(date, value)) + 
  geom_line(colour="cadetblue") +
  geom_point(data=y_df, shape=1, size=0.8) +
  scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
  labs(y="Lice per fish") +
  facet_grid(stage~sepaSite, scales="free_y") + 
  theme(axis.title.x=element_blank())
```

```{r}
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Daily mean lice per fish, including latent (mu, lines) and observed (y, points), 4th root transformed."
#| fig-dpi: 400
#| echo: false
ggplot(mu_df, aes(date, value^0.25)) + 
  geom_line(colour="cadetblue") +
  geom_point(data=y_df, shape=1, size=0.8) +
  scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
  labs(y="(Lice per fish)^0.25") +
  facet_grid(stage~sepaSite, scales="free_y") + 
  theme(axis.title.x=element_blank())
```

```{r}
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Daily mean lice per fish, including latent (mu, lines) and observed (y, points)."
#| fig-dpi: 400
#| echo: false
ggplot(mu_df |> filter(grepl("af", name)), aes(date, value)) + 
  geom_line(colour="cadetblue") +
  geom_point(data=y_df |> filter(grepl("af", name)), shape=1, size=0.8) +
  scale_x_date(date_breaks="3 months", date_labels="%b", date_minor_breaks="1 month") +
  labs(y="Lice per fish") +
  facet_grid(sepaSite~stage, scales="free_y") + 
  theme(axis.title.x=element_blank())
```

Note that these are simulated with arbitrary and randomized model parameters and would not be expected to fully conform with observed values.

# References
