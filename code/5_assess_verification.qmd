---
title: "E(tive)Lice verification assessment"
author: "Tim Szewczyk"
format: html
theme: litera
editor: visual
toc: true
number-sections: true
embed-resources: true
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

# Overview

This document evaluates the IEM performance on the simulated verification data sets.

# Setup

```{r}
#| message: false
#| warning: false
#| results: false
#| echo: false
library(tidyverse)
library(sf)
library(glue)
library(here)
proj_dir <- "~/EtiveLice/"
theme_set(theme_bw())
dir(glue("{proj_dir}/code/fn"), ".R", full.names=T) |> walk(source)

farm_order <- c("FFMC27", "SAR1", "APT1", "FFMC32", "FFMC84")
sim_dir <- glue("{proj_dir}/data/sim/")
```

```{r}
#| echo: false
stages <- c("Ch", "PA", "Ad")
stage_trans <- c("Ch-PA", "PA-Ad")
param_key <- tibble(name=c(paste0("attach_beta[", 1:5, "]"),
                           paste0("ensWts_p[", 1:20, "]"),
                           "IP_bg", "IP_bg_m3", "IP_scale",
                           paste0("surv_beta[1,", 1:3, "]"),
                           paste0("surv_beta[2,", 1:3, "]"),
                           paste0("mnDaysStage_beta[1,", 1:2, "]"),
                           paste0("mnDaysStage_beta[2,", 1:2, "]"),
                           paste0("thresh_GDD[", 1:2, ",1]"),
                           paste0("thresh_GDD[", 1:2, ",2]"),
                           "lifespan",
                           paste0("detect_p[", 1:3, "]"),
                           "nb_prec", "treatEfficacy"),
                    label=c(paste0("attach_", c("RW", "Sal", "UV", "UVsq", "Temp")),
                            paste0("ensWt_", 1:20),
                            "IP_bg", "IP_bg_m3", "IP_scale",
                            paste0("surv_Int_", stages),
                            paste0("surv_Sal_", stages),
                            paste0("mnDaysStage_Int_", stages[1:2]),
                            paste0("mnDaysStage_Temp_", stages[1:2]),
                            paste0("moltF_GDD_", stage_trans),
                            paste0("moltM_GDD_", stage_trans),
                            "lifespan_GDD",
                            paste0("p_detect_", stages),
                            "neg_binom_prec", "treatEfficacy"
                    )) |>
  mutate(label=factor(label, levels=unique(label)))
```

# Load data and posterior summaries

```{r}
#| message: false
#| warning: false
# out_pop_df <- dir(sim_dir, "sim_")[1:2] |>
#   map_dfr(
#     ~full_join(
#       read_csv(glue("{sim_dir}/{.x}/posterior_summary_pop_5stage_forcedDet.csv"), show_col_types=F),
#       read_csv(glue("{sim_dir}/{.x}/params_pop_5stage_forcedDet.csv"), show_col_types=F), 
#       by=join_by(name)
#     ) |>
#       mutate(sim=paste0("dat_", str_sub(.x, -2, -1))) |>
#       inner_join(param_key, by=join_by(name)))
sim_finished <- dir(sim_dir, "posterior_summary", recursive=T) |> str_sub(1, 6)
out_pop5s_df <- sim_finished |>
  map_dfr(
    ~full_join(
      read_csv(glue("{sim_dir}/{.x}/posterior_summary_pop_5stage.csv"), show_col_types=F),
      read_csv(glue("{sim_dir}/{.x}/params_pop_5stage.csv"), show_col_types=F), 
      by=join_by(name)
    ) |>
      mutate(sim=paste0("dat_", str_sub(.x, -2, -1))) |>
      inner_join(param_key, by=join_by(name)))

# out_full_df <- dir(sim_dir, "sim_")[1:3] |>
#   map_dfr(
#     ~full_join(
#       read_csv(glue("{sim_dir}/{.x}/posterior_summary_full_FEMALE_forcedDet.csv"), show_col_types=F),
#       read_csv(glue("{sim_dir}/{.x}/params_full.csv"), show_col_types=F), 
#       by=join_by(name)
#     ) |>
#       mutate(sim=paste0("dat_", str_sub(.x, -2, -1))) |>
#       inner_join(param_key, by=join_by(name)))
out_df <- bind_rows(
  # out_pop_df |> mutate(fit="forced"),
  out_pop5s_df |> mutate(fit="model")
  # out_full_df |> mutate(fit="in_full")
)
```

## IP and attachment

### Ensemble IP weights

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 3
#| echo: false
p_ensWts <- out_df |>
  filter(grepl("ensWts", name)) |>
  verification_plot(scales="free_x") +
  scale_x_continuous(limits=c(0, 1), breaks=round((0:3)/3, 2))
p_ensWts
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("ensWts", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  pr_in_CI_plot()
```

```{r}
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 3
#| echo: false
out_df |>
  filter(grepl("ensWts", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  scatter_post_mean_plot()
```

### Background IP

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 3
#| echo: false
p_IP <- out_df |> 
  filter(grepl("IP_bg", name)) |>
  verification_plot(ncol=3, scales="free")
p_IP
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("IP_bg_m3", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  pr_in_CI_plot()
```

```{r}
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 3
#| echo: false
out_df |>
  filter(grepl("IP_bg_m3", name)) |>
  scatter_post_mean_plot()
```

### P(attach)

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 3
#| echo: false
p_attach <- out_df |>   
  filter(grepl("attach_beta", name)) |>   
  verification_plot(scales="free_x") +     
  geom_vline(xintercept=0, linetype=3) 
p_attach
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("attach_beta", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  pr_in_CI_plot()
```

```{r}
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 3
#| echo: false
out_df |>
  filter(grepl("attach_beta", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  scatter_post_mean_plot()
```

## Development and survival

### P(survival)

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6
#| echo: false
p_surv <- out_df |> filter(grepl("surv_beta", name)) |>
  verification_plot(ncol=3, scales="free_x") +
  geom_vline(xintercept=0, linetype=3)
p_surv
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("surv_beta", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  pr_in_CI_plot()
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
cowplot::plot_grid(out_df |>
                     filter(grepl("surv_beta\\[1", name)) |>
                     mutate(inCI=between(value, L025, L975)) |>
                     scatter_post_mean_plot(),
                   out_df |>
                     filter(grepl("surv_beta\\[2", name)) |>
                     mutate(inCI=between(value, L025, L975)) |>
                     scatter_post_mean_plot(), 
                   nrow=1)
```

### P(molt) intercept

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 3
#| echo: false
p_pMoltInt <- out_df |> 
  filter(grepl("mnDaysStage_beta\\[1", name)) |>
  verification_plot(ncol=5) +
  geom_vline(xintercept=0, linetype=3)
p_pMoltInt
```

### P(molt) temperature effect

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 3
#| echo: false
p_pMoltTemp <- out_df |> 
  filter(grepl("mnDaysStage_beta\\[2", name)) |>
  verification_plot(ncol=5) +
  geom_vline(xintercept=0, linetype=3)
p_pMoltTemp
```

## Sampling and detection

### P(detect)

```{r}
#| fig-width: 8
#| fig-height: 3
#| echo: false
p_detectp <- out_df |> 
  filter(grepl("detect_p", name)) |>
  verification_plot(scales="free") +
  xlim(0, 1)
p_detectp
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("detect_p", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  pr_in_CI_plot()
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("detect_p", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  scatter_post_mean_plot()
```

### Negative binomial precision

```{r}
#| fig-width: 4
#| fig-height: 3
#| echo: false
p_nb <- out_df |> 
  filter(grepl("nb_prec", name)) |>
  verification_plot()
p_nb
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("nb_prec", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  pr_in_CI_plot()
```

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 2
#| echo: false
out_df |>
  filter(grepl("nb_prec", name)) |>
  mutate(inCI=between(value, L025, L975)) |>
  scatter_post_mean_plot()
```

## All parameters

```{r}
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 6
#| echo: false
full_sum_df <- out_df |>
  filter(name != "IP_bg") |>
  mutate(name=if_else(name=="lifespan", "thresh_GDD[,4]", name)) |>
  mutate(param_type=str_split_fixed(name, "\\[", 2)[,1]) |>
  mutate(param_type=case_when(grepl("surv_beta\\[1", name) ~ "surv_int",
                              .default=param_type)) |>
  drop_na()
lims_df <- full_sum_df |>
  group_by(param_type) |>
  summarise(lower=min(L25, value, na.rm=T),
            upper=max(L75, value, na.rm=T))
p <- full_sum_df |>
  ggplot(aes(mn, value)) +
  geom_line(stat="smooth", method="lm", formula=y~x, linewidth=1, se=F) +
  geom_line(stat="smooth", method="lm", formula=y~x, linewidth=0.25, se=F,
            aes(group=paste0(name, fit))) +
  geom_point(data=lims_df, aes(lower, lower), colour="white", size=0.2) +
  geom_point(data=lims_df, aes(upper, upper), colour="white", size=0.2) +
  geom_abline(linetype=3) +
  geom_point(shape=1, alpha=0.75) +
  geom_linerange(aes(xmin=L25, xmax=L75)) +
  facet_wrap(~param_type, scales="free", nrow=2) +
  labs(x="Posterior mean + 50% CI", 
       y="True value",
       title="Verification across simulated datasets")
ggsave(glue("{proj_dir}/admin/project_meetings/figs_temp/pop_freeDet_performance.png"), p,
       width=10, height=4.5, dpi=300)
p
```

```{r}
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 8
#| echo: false
p <- full_sum_df |>
  ggplot(aes(value, mn)) +
  geom_line(stat="smooth", method="lm", formula=y~x, linewidth=1, se=F) +
  geom_line(stat="smooth", method="lm", formula=y~x, linewidth=0.25, se=F,
            aes(group=paste0(name, fit))) +
  # geom_point(data=lims_df, aes(lower, lower), colour="white", size=0.2) +
  # geom_point(data=lims_df, aes(upper, upper), colour="white", size=0.2) +
  geom_abline(linetype=3) +
  geom_point(shape=1, alpha=0.75) +
  geom_linerange(aes(ymin=L25, ymax=L75)) +
  facet_wrap(~label, scales="free", nrow=6) +
  labs(x="True value",
       y="Posterior mean + 50% CI", 
       title="Verification across simulated datasets")
ggsave(glue("{proj_dir}/admin/project_meetings/figs_temp/pop_freeDet_performance_all.png"), p,
       width=12, height=10, dpi=300)
p
full_sum_df |>
  group_by(label) |>
  summarise(r=cor(mn, value)) |>
  print(n=50)

full_sum_df |>
  group_by(param_type) |>
  summarise(r=cor(mn, value))
```

# Posterior regressions

## Attachment

```{r}
#| message: false
#| warning: false
#| fig-width: 6
#| fig-height: 15
#| echo: false
attach_rng <- apply(readRDS(glue("{proj_dir}/data/sim/sim_01/attach_env_mx.rds")), 3, range)
attach_df <- expand_grid(
  RW=qlogis(c(0.1, 0.2, 0.3, 0.4)),
  Sal=seq_range(attach_rng[,2], length.out=3),
  UV=seq_range(attach_rng[,3], length.out=20)
) |>
  mutate(UV_sq=UV^2)

```

```{r}
post_df <- dir(sim_dir, "sim_") |>
  map_dfr(
      ~bind_rows(
        read_csv(glue("{sim_dir}/{.x}/posterior_pop5stage.csv"), show_col_types=F) |>
          filter(grepl("attach_beta", name)) |>
          select(-.iteration, -.chain) |>
          mutate(fit="Model"),
        read_csv(glue("{sim_dir}/{.x}/params_pop_5stage.csv"), show_col_types=F) |>
          filter(grepl("attach_beta", name)) |>
          mutate(fit="True", .draw=1)) |>
      mutate(sim=paste0("dat_", str_sub(.x, -2, -1))))
pAttach_post <- post_df |>
  mutate(beta=paste0("b", str_sub(name, -2, -2))) |>
  select(-name) |>
  pivot_wider(names_from="beta", values_from="value") |>
  mutate(attach_df=list(attach_df)) |>
  unnest(attach_df) |>
  mutate(pAttach=plogis(b1*RW + b2*Sal + b3*UV + b4*UV_sq),
         salinity=Sal*4.01 + 26.2,
         UV_raw=UV*6.14 + 14.2,
         RW=plogis(RW))
pAttach_quantiles <- pAttach_post |>
  filter(sim %in% paste0("dat_0", 1)) |>
  group_by(.draw, fit, sim, RW, salinity, UV_raw) |>
  sevcheck::get_intervals(pAttach)
```

```{r}

 pAttach_post |>
  filter(.draw %in% c(1, sample.int(n_distinct(pAttach_post$.draw), 500))) |>
  filter(sim %in% unique(pAttach_post$sim)[35]) |>
  ggplot(aes(UV_raw, pAttach, alpha=fit, linewidth=fit,
             group=paste(RW, salinity, .draw, fit), colour=salinity)) + 
  geom_line() +
  scale_colour_viridis_c(option="mako", end=0.9) +
  scale_alpha_manual(values=c(0.1, 1)) +
  scale_linewidth_manual(values=c(0.2, 1)) +
  ylim(0, NA) + 
  labs(x="UV (cm/s)", y="Daily Pr(Attachment)") +
  facet_grid(salinity~RW, scales="free_y")
 
 pAttach_post |>
  filter(.draw %in% c(1, sample.int(n_distinct(pAttach_post$.draw), 10))) |>
  filter(sim %in% unique(pAttach_post$sim)[21:35]) |>
  ggplot(aes(UV_raw, pAttach, alpha=fit, linewidth=fit,
             group=paste(RW, salinity, .draw, fit), colour=salinity)) + 
  geom_line() +
  scale_colour_viridis_c(option="mako", end=0.9) +
  scale_alpha_manual(values=c(0.4, 1)) +
  scale_linewidth_manual(values=c(0.2, 1)) +
  ylim(0, NA) + 
  labs(x="UV (cm/s)", y="Daily Pr(Attachment)") +
  facet_grid(sim~RW, scales="free_y")
```

```{r}
pAttach_df <- out_df |>
  filter(grepl("attach_beta", name)) |>
  mutate(beta=paste0("b", str_sub(name, -2, -2))) |>
  select(beta, mn, value, sim, fit) |>
  pivot_longer(2:3, names_to="src", values_to="value") |>
  mutate(fit=case_when(src=="value"~"True",
                       src!="value" & fit=="model" ~ "Model")) |>
  select(-src) |>
  pivot_wider(names_from="beta", values_from="value") |>
  mutate(attach_df=list(attach_df)) |>
  unnest(attach_df) |>
  mutate(pAttach=plogis(b1*RW + b2*Sal + b3*UV + b4*UV_sq),
         salinity=Sal*4.01 + 26.2,
         UV_raw=UV*6.14 + 14.2,
         RW=plogis(RW))

```

```{r}
#| message: false
#| warning: false
#| fig-width: 14
#| fig-height: 15
#| echo: false
p1 <- pAttach_df |>
  filter(sim %in% unique(pAttach_df$sim)[1:15]) |>
  ggplot(aes(UV_raw, pAttach, group=paste(RW,salinity,fit), colour=salinity, linetype=fit)) + 
  geom_line() +
  scale_colour_viridis_c(option="mako", end=0.9) +
  scale_linetype_manual(values=c(2, 1)) +
  ylim(0, NA) + 
  labs(x="UV (cm/s)", y="Daily Pr(Attachment)") +
  facet_grid(sim~RW, scales="free_y")

p2 <- pAttach_df |>
  filter(sim %in% unique(pAttach_df$sim)[16:30]) |>
  ggplot(aes(UV_raw, pAttach, group=paste(RW,salinity,fit), colour=salinity, linetype=fit)) + 
  geom_line() +
  scale_colour_viridis_c(option="mako", end=0.9) +
  scale_linetype_manual(values=c(2, 1)) +
  ylim(0, NA) + 
  labs(x="UV (cm/s)", y="Daily Pr(Attachment)") +
  facet_grid(sim~RW, scales="free_y")
ggpubr::ggarrange(p1, p2, nrow=1, common.legend=TRUE, legend="right")

# pAttach_df |>
#   filter(sim %in% unique(pAttach_df$sim)[1:10]) |>
#   ggplot(aes(UV_raw, pAttach, group=paste(RW,salinity,fit), colour=salinity, linetype=fit)) + 
#   geom_line() +
#   scale_colour_viridis_c(option="mako", end=0.9) +
#   scale_linetype_manual(values=c(2, 1)) +
#   ylim(0, NA) + 
#   labs(x="UV (cm/s)", y="Daily Pr(Attachment)") +
#   facet_grid(sim~RW, scales="free_y")
```

## Survival

```{r}
S_range <- range(readRDS(glue("{proj_dir}/data/sim/sim_01/sal_mx.rds")))
S_df <- tibble(sal=seq_range(S_range, length.out=100))
pSurv_df <- out_df |>
  filter(grepl("surv_beta", name)) |>
  mutate(stage=str_sub(label, -2, -1),
         beta=paste0("b", str_sub(name, -4, -4))) |>
  select(stage, beta, mn, value, sim, fit) |>
  pivot_longer(3:4, names_to="src", values_to="value") |>
  mutate(fit=case_when(src=="value"~"True",
                       src!="value" & fit=="model" ~ "Model")) |>
  select(-src) |>
  pivot_wider(names_from="beta", values_from="value") |>
  mutate(S_df=list(S_df)) |>
  unnest(S_df) |>
  mutate(pSurv=plogis(b1 + b2*sal),
         salinity=sal+30,
         stage=factor(stage, levels=unique(stage)))

```

```{r}
#| message: false
#| warning: false
#| fig-width: 15
#| fig-height: 15
#| echo: false
p1 <- pSurv_df |>
  filter(sim %in% unique(pSurv_df$sim)[1:15]) |>
  ggplot(aes(salinity, pSurv, group=paste(stage, fit), colour=stage, linetype=fit)) + 
  geom_line() +
  scale_colour_manual(values=RColorBrewer::brewer.pal(n=4, name="Paired")[c(1,2,4)]) +
  scale_linetype_manual(values=c(2, 1)) +
  ylim(0, 1) + 
  labs(x="Salinity (psu)", y="Daily Pr(Survival)") +
  facet_grid(stage~sim)
p2 <- pSurv_df |>
  filter(sim %in% unique(pAttach_df$sim)[16:30]) |>
  ggplot(aes(salinity, pSurv, group=paste(stage, fit), colour=stage, linetype=fit)) + 
  geom_line() +
  scale_colour_manual(values=RColorBrewer::brewer.pal(n=4, name="Paired")[c(1,2,4)]) +
  scale_linetype_manual(values=c(2, 1)) +
  ylim(0, 1) + 
  labs(x="Salinity (psu)", y="Daily Pr(Survival)") +
  facet_grid(stage~sim)

ggpubr::ggarrange(p1, p2, nrow=2, common.legend=TRUE, legend="right")

pSurv_df |>
  filter(sim %in% unique(pAttach_df$sim)[21:27]) |>
  ggplot(aes(salinity, pSurv, group=paste(stage, fit), colour=stage, linetype=fit)) + 
  geom_line() +
  scale_colour_manual(values=RColorBrewer::brewer.pal(n=4, name="Paired")[c(1,2,4)]) +
  scale_linetype_manual(values=c(2, 1)) +
  ylim(0, 1) + 
  labs(x="Salinity (psu)", y="Daily Pr(Survival)") +
  facet_grid(stage~sim) +
  theme(legend.position="bottom")
ggsave(glue("{proj_dir}/admin/project_meetings/figs_temp/dataExamp_fittedSalReg.png"),
       width=12, height=6)
```

## Development rate

```{r}
T_range <- range(readRDS(glue("{proj_dir}/data/sim/sim_01/temp_mx.rds")))
T_z_range <- range(readRDS(glue("{proj_dir}/data/sim/sim_01/temp_z_mx.rds")))

T_df <- tibble(temp=seq_range(T_range, length.out=100),
               temp_z=seq_range(T_z_range, length.out=100))
pMolt_df <- out_df |>
  filter(grepl("mnDaysStage_beta\\[", name)) |>
  mutate(sex="F",
         stage=str_sub(label, -2, -1),
         beta=paste0("b", str_sub(name, -4, -4))) |>
  select(sex, stage, beta, mn, sim, fit) |>
  pivot_wider(names_from="beta", values_from="mn") |>
  mutate(T_df=list(T_df)) |>
  unnest(T_df) |>
  mutate(pMolt=1/(b1 + b2*temp_z) * 0.5,
         mnDays=1/pMolt,
         stage=factor(stage, levels=unique(stage)),
         GDD=temp*mnDays) |>
  left_join(out_df |> 
              filter(grepl("GDD.*,1]", name)) |>
              mutate(sex=if_else(grepl("F", label), "F", "M"),
                     stage=str_sub(label, -5, -4)) |> 
              select(fit, sex, stage, sim, value)) |>
  mutate(trueDays=value/temp)
```

```{r}
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 4
#| echo: false
pMolt_df |>
  ggplot(aes(temp, pMolt, group=paste(sim, fit), colour=fit)) + 
  geom_line(alpha=0.5) +
  scale_colour_manual("Fit", values=c("#377eb8", "#4daf4a")) +
  ylim(0, NA) + 
  labs(x="Temperature (C)", y="Daily Pr(Molt)") +
  facet_grid(.~stage)
```

```{r}
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 4
#| echo: false
pMolt_df |>
  ggplot(aes(temp, mnDays, group=paste(sim, fit), colour=fit)) + 
  geom_line(alpha=0.5) +
  geom_line(aes(y=trueDays), colour="grey30") +
  scale_colour_manual("Fit", values=c("#377eb8", "#4daf4a")) +
  ylim(0, NA) +
  labs(x="Temperature (C)", y="Mean days per stage") +
  facet_grid(.~stage)
```

Ch and PA might be mis-estimated, but the requirements for reaching the adult stage (Ch + PA) might be better. In the model fit, the GDD is dependent on temperature. This is in contrast to the simulated data.

```{r}
#| message: false
#| warning: false
#| echo: false
pMolt_df |>
  group_by(temp, sim, fit) |>
  summarise(mnDays=sum(mnDays)) |>
  ggplot(aes(temp, mnDays, group=paste(sim, fit), colour=fit)) + 
  geom_line(alpha=0.5) +
  scale_colour_manual("Fit", values=c("#377eb8", "#4daf4a")) +
  ylim(0, NA) +
  labs(x="Temperature (C)", y="Mean days to adulthood")
```

Generally about the right magnitude for total GDD to the adult stage, though the model tends to estimate a bit lower GDD requirements (i.e., faster development) overall. Estimates are slightly too slow for chalimus and too fast for pre-adults.

```{r}
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 4
#| echo: false
pMolt_withAd <- pMolt_df |>
  bind_rows(pMolt_df |>
              group_by(temp, sim, fit) |>
              summarise(mnDays=sum(mnDays),
                        GDD=sum(GDD),
                        value=sum(value)) |>
              mutate(stage="Ad")) |>
  mutate(stage=factor(stage, levels=c("Ch", "PA", "Ad")))

pMolt_withAd |>
  ggplot(aes(value, GDD, colour=temp, group=sim)) + 
  geom_abline() +
  geom_path() +
  scale_colour_viridis_c("Temperature (C)", option="turbo") +
  labs(x="True (GDD)", y="Temp * Mean days per stage") +
  coord_equal() +
  facet_grid(.~stage)
```

Below, the true values are shown as the rug on the y-axis

```{r}
#| message: false
#| warning: false
#| fig-width: 12
#| fig-height: 4
#| echo: false
pMolt_withAd |>
  ggplot(aes(temp, GDD, group=sim)) + 
  geom_line(alpha=0.8) +
  geom_rug(data=pMolt_withAd |> slice_head(n=1, by=c(stage, sim)), 
           aes(y=value), sides="l", alpha=0.8) +
  labs(x="Temperature (C)", y="GGD") +
  facet_grid(.~stage)
```

```{r}
pMolt_df |>
  group_by(sim, fit, temp) |>
  summarise(value=sum(value), GDD=sum(GDD)) |>
  ggplot(aes(value, GDD, colour=temp)) + 
  geom_abline() +
  geom_point(alpha=0.3) +
  scale_colour_viridis_c("Temperature (C)", option="turbo") +
  labs(x="True (GDD)", y="Temp * Mean days to adulthood") + 
  xlim(285, 660) + ylim(285, 660) + 
  coord_equal()
```

```{r}
pMolt_df |>
  mutate(dMean=abs(temp - 14.3)) |>
  slice_min(dMean) |>
  group_by(sim, fit, temp) |>
  summarise(value=sum(value), GDD=sum(GDD)) |>
  ggplot(aes(value, GDD)) + 
  geom_abline() +
  geom_point(alpha=0.9) +
  labs(x="True (GDD)", y="Mean days to adulthood at 14.3C (mean 2023-2024)") + 
  xlim(400, 600) + ylim(400, 600) + 
  coord_equal()
```
